--사원번호 컬럼을 오름차순으로 정렬 조회
SELECT employee_id, EMP_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, SALARY, MANAGER_ID, COMMISSION_PCT, RETIRE_DATE, 
DEPARTMENT_ID, JOB_ID, CREATE_DATE, UPDATE_DATE 
FROM EMPLOYEES 
ORDER BY EMPLOYEE_ID ASC;

-- 인덱스 힌트를 사용하여 데이터를 정렬 조회
-- 인덱스 명 : PK_EMPLOYEES (PRIMARY KEY인 EMPLOYEE_ID의 제약조건 객체 이름이랑 같음)
/* 문법 */
SELECT /*+ 인덱스힌트 구문 */ employee_id, EMP_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, SALARY, MANAGER_ID, COMMISSION_PCT, RETIRE_DATE, 
DEPARTMENT_ID, JOB_ID, CREATE_DATE, UPDATE_DATE 
FROM EMPLOYEES;

-- index == index_asc : 오름차순으로 동일한 의미
SELECT /*+ index(e PK_EMPLOYEES) */ employee_id, EMP_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, SALARY, MANAGER_ID, COMMISSION_PCT, RETIRE_DATE, 
DEPARTMENT_ID, JOB_ID, CREATE_DATE, UPDATE_DATE 
FROM EMPLOYEES e;
-- employee_id 컬럼으로 정렬된 출력형태가 아닌 경우는 PK_EMPLOYEES(인덱스명) 확인할 것

-- 내림차순
SELECT /*+ index_desc(e PK_EMPLOYEES) */ employee_id, EMP_NAME, EMAIL, PHONE_NUMBER, HIRE_DATE, SALARY, MANAGER_ID, COMMISSION_PCT, RETIRE_DATE, 
DEPARTMENT_ID, JOB_ID, CREATE_DATE, UPDATE_DATE 
FROM EMPLOYEES e;

-- 복합 인덱스 힌트
-- 인덱스 명 : DEPARTMENTS테이블 - PK_DEPARTMENTS
-- 사원번호 오름차순, 부서코드 내림차순
SELECT /*+ INDEX(e PK_EMPLOYEES) INDEX_DESC (D PK_DEPARTMENTS) */ e.employee_id, e.emp_name, e.hire_date, d.department_id, d.department_name
FROM EMPLOYEES E INNER JOIN DEPARTMENTS D 
ON e.department_id = D.DEPARTMENT_ID;
